apiVersion: v1
kind: Service
metadata:
  name: kubebox
  labels:
    template: kubebox
  namespace: littlelink-server
spec:
  ports:
    - name: kubebox
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    name: kubebox

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubebox
  namespace: littlelink-server
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: kubebox
  template:
    metadata:
      name: kubebox
      labels:
        name: kubebox
    spec:
      serviceAccountName: kubebox
      containers:
      - image: astefanutti/kubebox:server
        imagePullPolicy: Always
        name: kubebox
        ports:
        - containerPort: 8080
          protocol: TCP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubebox
  namespace: littlelink-server
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubebox
  namespace: littlelink-server
subjects:
- kind: ServiceAccount
  name: kubebox
  namespace: littlelink-server
roleRef:
  kind: ClusterRole
  name: kubebox
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubebox
  namespace: littlelink-server
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: kubebox
  namespace: littlelink-server
spec:
  entryPoints:
    - websecure
  tls:
    secretName: sergsoares-com
    domains:
    - main: kubebox.sergsoares.com 
  routes:
    - kind: Rule
      match: Host(`kubebox.sergsoares.com`)
      services:
        - name: kubebox
          port: 8080